# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3'

# Define services
services:

  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on: 
      - db # This service depends on database. Start that first.
      - redis # This service depends on redis. Start that first.
    environment: # Pass environment variables to the service
      REDIS_URL: redis:6379
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
  # Databse Service
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: hotelier
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
  # Databse Administration Service
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: dmitrychurkin1988@gmail.com
      PGADMIN_DEFAULT_PASSWORD: secret
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
  # Redis Service
  redis:
    image: "redis:latest" # Use a public Redis image to build the redis service
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  backend:
    driver: bridge
volumes:
  postgres_data:
  pgadmin: